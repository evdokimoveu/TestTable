
package table;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ListSelectionModel;
import table.DAO.TableDAO;
import table.DAO.impl.TableDAOJSONImpl;
import table.model.Cell;
import table.model.Row;
import table.utils.Constants;

/**
 *
 * @author evdokimoveu
 */
public class TestTableFrame extends javax.swing.JFrame {
   
    private final int ROW_HEIGHT = 55;
    
    private final List<Row> rows;
    private final TableDAO tableDAO;
    private final TableModel tableModel;
    private int[] selectedRow;
    
    /**
     * Creates new form TableFrame
     */
    public TestTableFrame() {
        
        initComponents();
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        setLocation(new Point((screenSize.width-frameSize.width)/2, (screenSize.height-frameSize.height)/2));
        setTitle("Test table application");
        setResizable(false);
        tableDAO = new TableDAOJSONImpl();
        rows = tableDAO.read();
        tableModel = new TableModel(rows);
        mainTable.getTableHeader().setReorderingAllowed(false);
        mainTable.setModel(tableModel);
        mainTable.setDefaultRenderer(Object.class, new TableRender());
        mainTable.setRowHeight(ROW_HEIGHT);
    }

        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        addNewRowButton = new javax.swing.JButton();
        deleteSelectedRowButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        upSelectedRowButton = new javax.swing.JButton();
        downSelectedRowButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane.setViewportView(mainTable);

        addNewRowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/plus.png"))); // NOI18N
        addNewRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewRowButtonActionPerformed(evt);
            }
        });

        deleteSelectedRowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/minus.png"))); // NOI18N
        deleteSelectedRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSelectedRowButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        upSelectedRowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/up.png"))); // NOI18N
        upSelectedRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upSelectedRowButtonActionPerformed(evt);
            }
        });

        downSelectedRowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/down.png"))); // NOI18N
        downSelectedRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downSelectedRowButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addNewRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteSelectedRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton))
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(upSelectedRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(downSelectedRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(upSelectedRowButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(downSelectedRowButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addNewRowButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteSelectedRowButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        tableDAO.update(rows);
        System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void addNewRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewRowButtonActionPerformed
        //Add new Row      
        addNewRow();
        tableRefresh();
        
    }//GEN-LAST:event_addNewRowButtonActionPerformed

    private void deleteSelectedRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSelectedRowButtonActionPerformed
        // Delete selected Row
        deleteRow();
        tableRefresh();
    }//GEN-LAST:event_deleteSelectedRowButtonActionPerformed

    private void downSelectedRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downSelectedRowButtonActionPerformed
        // Down selected row
        moveDownRow();
        tableRefresh();
        selectRowAfterRefresh();
    }//GEN-LAST:event_downSelectedRowButtonActionPerformed

    private void upSelectedRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upSelectedRowButtonActionPerformed
        // Up selected row
        moveUpRow();
        tableRefresh();
        selectRowAfterRefresh();
    }//GEN-LAST:event_upSelectedRowButtonActionPerformed

    private void addNewRow(){
        Row row = new Row();
        List<Cell> cells = new ArrayList<>();
        for(int i = 0; i < Constants.COLUMN_COUNT; i++){
            Cell cell = new Cell();
            cell.setText(String.valueOf((int)(Math.random() * 100000)));
            cell.setImgSrc("/res/smile.png");
            cells.add(cell);
        }
        row.setCells(cells);
        rows.add(row);
    }
    
    private void deleteRow(){
        int[] selection = mainTable.getSelectedRows();
        for(int i = selection.length - 1; i >= 0; i--){
            rows.remove(selection[i]);
        }
    }
    
    private void tableRefresh(){
        tableDAO.update(rows);
        tableModel.setRows(rows);
        tableModel.fireTableDataChanged();
    }
    
    private void moveUpRow(){
        int[] selection = mainTable.getSelectedRows();
        if(selection.length > 0 && selection[0] > 0){
            selectedRow = new int[selection.length];
            for(int i = 0; i < selection.length; i++){
                Row tempRow = rows.get(selection[i] - 1);
                rows.set(selection[i] - 1, rows.get(selection[i]));
                rows.set(selection[i], tempRow);
                selectedRow[i] = --selection[i];
            }
        }
        else{
            selectedRow = selection;
        }        
    }
    
    private void moveDownRow(){
        int[] selection = mainTable.getSelectedRows();        
        if(selection.length > 0 && selection[selection.length - 1] < rows.size() - 1){
            selectedRow = new int[selection.length];
            for(int i = selection.length - 1; i >= 0; i--){
                Row tempRow = rows.get(selection[i] + 1);
                rows.set(selection[i] + 1, rows.get(selection[i]));
                rows.set(selection[i], tempRow);
                selectedRow[i] = ++selection[i];
            }
        }
        else{
            selectedRow = selection;
        }       
    }
    
    private void selectRowAfterRefresh(){        
        if(selectedRow != null && selectedRow.length > 0){
            ListSelectionModel model = mainTable.getSelectionModel();
            model.clearSelection();
            model.addSelectionInterval(selectedRow[0], selectedRow[selectedRow.length - 1]);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestTableFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TestTableFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewRowButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteSelectedRowButton;
    private javax.swing.JButton downSelectedRowButton;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable mainTable;
    private javax.swing.JButton upSelectedRowButton;
    // End of variables declaration//GEN-END:variables
}
